// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.data_feed
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct DataFeedMessageHeader : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static DataFeedMessageHeader GetRootAsDataFeedMessageHeader(ByteBuffer _bb) { return GetRootAsDataFeedMessageHeader(_bb, new DataFeedMessageHeader()); }
  public static DataFeedMessageHeader GetRootAsDataFeedMessageHeader(ByteBuffer _bb, DataFeedMessageHeader obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DataFeedMessageHeader __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public solarxr_protocol.data_feed.DataFeedMessage MessageType { get { int o = __p.__offset(4); return o != 0 ? (solarxr_protocol.data_feed.DataFeedMessage)__p.bb.Get(o + __p.bb_pos) : solarxr_protocol.data_feed.DataFeedMessage.NONE; } }
  public TTable? Message<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public solarxr_protocol.data_feed.PollDataFeed MessageAsPollDataFeed() { return Message<solarxr_protocol.data_feed.PollDataFeed>().Value; }
  public solarxr_protocol.data_feed.StartDataFeed MessageAsStartDataFeed() { return Message<solarxr_protocol.data_feed.StartDataFeed>().Value; }
  public solarxr_protocol.data_feed.DataFeedUpdate MessageAsDataFeedUpdate() { return Message<solarxr_protocol.data_feed.DataFeedUpdate>().Value; }
  public solarxr_protocol.data_feed.DataFeedConfig MessageAsDataFeedConfig() { return Message<solarxr_protocol.data_feed.DataFeedConfig>().Value; }

  public static Offset<solarxr_protocol.data_feed.DataFeedMessageHeader> CreateDataFeedMessageHeader(FlatBufferBuilder builder,
      solarxr_protocol.data_feed.DataFeedMessage message_type = solarxr_protocol.data_feed.DataFeedMessage.NONE,
      int messageOffset = 0) {
    builder.StartTable(2);
    DataFeedMessageHeader.AddMessage(builder, messageOffset);
    DataFeedMessageHeader.AddMessageType(builder, message_type);
    return DataFeedMessageHeader.EndDataFeedMessageHeader(builder);
  }

  public static void StartDataFeedMessageHeader(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddMessageType(FlatBufferBuilder builder, solarxr_protocol.data_feed.DataFeedMessage messageType) { builder.AddByte(0, (byte)messageType, 0); }
  public static void AddMessage(FlatBufferBuilder builder, int messageOffset) { builder.AddOffset(1, messageOffset, 0); }
  public static Offset<solarxr_protocol.data_feed.DataFeedMessageHeader> EndDataFeedMessageHeader(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.data_feed.DataFeedMessageHeader>(o);
  }
}


}
