// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.rpc.settings
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// Settings for the skeletal model that are toggles.
public struct ModelToggles : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static ModelToggles GetRootAsModelToggles(ByteBuffer _bb) { return GetRootAsModelToggles(_bb, new ModelToggles()); }
  public static ModelToggles GetRootAsModelToggles(ByteBuffer _bb, ModelToggles obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ModelToggles __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool? ExtendedSpine { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool?)null; } }
  public bool? ExtendedPelvis { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool?)null; } }
  public bool? ExtendedKnee { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool?)null; } }
  public bool? ForceArmsFromHmd { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool?)null; } }
  public bool? FloorClip { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool?)null; } }
  public bool? SkatingCorrection { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool?)null; } }
  public bool? ViveEmulation { get { int o = __p.__offset(16); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool?)null; } }
  public bool? ToeSnap { get { int o = __p.__offset(18); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool?)null; } }
  public bool? FootPlant { get { int o = __p.__offset(20); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool?)null; } }
  public bool? SelfLocalization { get { int o = __p.__offset(22); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool?)null; } }
  public bool? UsePosition { get { int o = __p.__offset(24); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool?)null; } }
  public bool? EnforceConstraints { get { int o = __p.__offset(26); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool?)null; } }
  public bool? CorrectConstraints { get { int o = __p.__offset(28); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool?)null; } }

  public static Offset<solarxr_protocol.rpc.settings.ModelToggles> CreateModelToggles(FlatBufferBuilder builder,
      bool? extended_spine = null,
      bool? extended_pelvis = null,
      bool? extended_knee = null,
      bool? force_arms_from_hmd = null,
      bool? floor_clip = null,
      bool? skating_correction = null,
      bool? vive_emulation = null,
      bool? toe_snap = null,
      bool? foot_plant = null,
      bool? self_localization = null,
      bool? use_position = null,
      bool? enforce_constraints = null,
      bool? correct_constraints = null) {
    builder.StartTable(13);
    ModelToggles.AddCorrectConstraints(builder, correct_constraints);
    ModelToggles.AddEnforceConstraints(builder, enforce_constraints);
    ModelToggles.AddUsePosition(builder, use_position);
    ModelToggles.AddSelfLocalization(builder, self_localization);
    ModelToggles.AddFootPlant(builder, foot_plant);
    ModelToggles.AddToeSnap(builder, toe_snap);
    ModelToggles.AddViveEmulation(builder, vive_emulation);
    ModelToggles.AddSkatingCorrection(builder, skating_correction);
    ModelToggles.AddFloorClip(builder, floor_clip);
    ModelToggles.AddForceArmsFromHmd(builder, force_arms_from_hmd);
    ModelToggles.AddExtendedKnee(builder, extended_knee);
    ModelToggles.AddExtendedPelvis(builder, extended_pelvis);
    ModelToggles.AddExtendedSpine(builder, extended_spine);
    return ModelToggles.EndModelToggles(builder);
  }

  public static void StartModelToggles(FlatBufferBuilder builder) { builder.StartTable(13); }
  public static void AddExtendedSpine(FlatBufferBuilder builder, bool? extendedSpine) { builder.AddBool(0, extendedSpine); }
  public static void AddExtendedPelvis(FlatBufferBuilder builder, bool? extendedPelvis) { builder.AddBool(1, extendedPelvis); }
  public static void AddExtendedKnee(FlatBufferBuilder builder, bool? extendedKnee) { builder.AddBool(2, extendedKnee); }
  public static void AddForceArmsFromHmd(FlatBufferBuilder builder, bool? forceArmsFromHmd) { builder.AddBool(3, forceArmsFromHmd); }
  public static void AddFloorClip(FlatBufferBuilder builder, bool? floorClip) { builder.AddBool(4, floorClip); }
  public static void AddSkatingCorrection(FlatBufferBuilder builder, bool? skatingCorrection) { builder.AddBool(5, skatingCorrection); }
  public static void AddViveEmulation(FlatBufferBuilder builder, bool? viveEmulation) { builder.AddBool(6, viveEmulation); }
  public static void AddToeSnap(FlatBufferBuilder builder, bool? toeSnap) { builder.AddBool(7, toeSnap); }
  public static void AddFootPlant(FlatBufferBuilder builder, bool? footPlant) { builder.AddBool(8, footPlant); }
  public static void AddSelfLocalization(FlatBufferBuilder builder, bool? selfLocalization) { builder.AddBool(9, selfLocalization); }
  public static void AddUsePosition(FlatBufferBuilder builder, bool? usePosition) { builder.AddBool(10, usePosition); }
  public static void AddEnforceConstraints(FlatBufferBuilder builder, bool? enforceConstraints) { builder.AddBool(11, enforceConstraints); }
  public static void AddCorrectConstraints(FlatBufferBuilder builder, bool? correctConstraints) { builder.AddBool(12, correctConstraints); }
  public static Offset<solarxr_protocol.rpc.settings.ModelToggles> EndModelToggles(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.rpc.settings.ModelToggles>(o);
  }
}


}
