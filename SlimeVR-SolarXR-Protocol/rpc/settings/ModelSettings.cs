// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.rpc.settings
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// Settings for the skeletal model.
public struct ModelSettings : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static ModelSettings GetRootAsModelSettings(ByteBuffer _bb) { return GetRootAsModelSettings(_bb, new ModelSettings()); }
  public static ModelSettings GetRootAsModelSettings(ByteBuffer _bb, ModelSettings obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ModelSettings __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public solarxr_protocol.rpc.settings.ModelToggles? Toggles { get { int o = __p.__offset(4); return o != 0 ? (solarxr_protocol.rpc.settings.ModelToggles?)(new solarxr_protocol.rpc.settings.ModelToggles()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public solarxr_protocol.rpc.settings.ModelRatios? Ratios { get { int o = __p.__offset(6); return o != 0 ? (solarxr_protocol.rpc.settings.ModelRatios?)(new solarxr_protocol.rpc.settings.ModelRatios()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public solarxr_protocol.rpc.settings.LegTweaksSettings? LegTweaks { get { int o = __p.__offset(8); return o != 0 ? (solarxr_protocol.rpc.settings.LegTweaksSettings?)(new solarxr_protocol.rpc.settings.LegTweaksSettings()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public solarxr_protocol.rpc.settings.SkeletonHeight? SkeletonHeight { get { int o = __p.__offset(10); return o != 0 ? (solarxr_protocol.rpc.settings.SkeletonHeight?)(new solarxr_protocol.rpc.settings.SkeletonHeight()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<solarxr_protocol.rpc.settings.ModelSettings> CreateModelSettings(FlatBufferBuilder builder,
      Offset<solarxr_protocol.rpc.settings.ModelToggles> togglesOffset = default(Offset<solarxr_protocol.rpc.settings.ModelToggles>),
      Offset<solarxr_protocol.rpc.settings.ModelRatios> ratiosOffset = default(Offset<solarxr_protocol.rpc.settings.ModelRatios>),
      Offset<solarxr_protocol.rpc.settings.LegTweaksSettings> leg_tweaksOffset = default(Offset<solarxr_protocol.rpc.settings.LegTweaksSettings>),
      Offset<solarxr_protocol.rpc.settings.SkeletonHeight> skeleton_heightOffset = default(Offset<solarxr_protocol.rpc.settings.SkeletonHeight>)) {
    builder.StartTable(4);
    ModelSettings.AddSkeletonHeight(builder, skeleton_heightOffset);
    ModelSettings.AddLegTweaks(builder, leg_tweaksOffset);
    ModelSettings.AddRatios(builder, ratiosOffset);
    ModelSettings.AddToggles(builder, togglesOffset);
    return ModelSettings.EndModelSettings(builder);
  }

  public static void StartModelSettings(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddToggles(FlatBufferBuilder builder, Offset<solarxr_protocol.rpc.settings.ModelToggles> togglesOffset) { builder.AddOffset(0, togglesOffset.Value, 0); }
  public static void AddRatios(FlatBufferBuilder builder, Offset<solarxr_protocol.rpc.settings.ModelRatios> ratiosOffset) { builder.AddOffset(1, ratiosOffset.Value, 0); }
  public static void AddLegTweaks(FlatBufferBuilder builder, Offset<solarxr_protocol.rpc.settings.LegTweaksSettings> legTweaksOffset) { builder.AddOffset(2, legTweaksOffset.Value, 0); }
  public static void AddSkeletonHeight(FlatBufferBuilder builder, Offset<solarxr_protocol.rpc.settings.SkeletonHeight> skeletonHeightOffset) { builder.AddOffset(3, skeletonHeightOffset.Value, 0); }
  public static Offset<solarxr_protocol.rpc.settings.ModelSettings> EndModelSettings(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.rpc.settings.ModelSettings>(o);
  }
}


}
