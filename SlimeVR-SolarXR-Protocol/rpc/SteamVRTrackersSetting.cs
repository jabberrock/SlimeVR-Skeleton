// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.rpc
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SteamVRTrackersSetting : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static SteamVRTrackersSetting GetRootAsSteamVRTrackersSetting(ByteBuffer _bb) { return GetRootAsSteamVRTrackersSetting(_bb, new SteamVRTrackersSetting()); }
  public static SteamVRTrackersSetting GetRootAsSteamVRTrackersSetting(ByteBuffer _bb, SteamVRTrackersSetting obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SteamVRTrackersSetting __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool Waist { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool Chest { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool AutomaticTrackerToggle { get { int o = __p.__offset(16); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool LeftFoot { get { int o = __p.__offset(18); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool RightFoot { get { int o = __p.__offset(20); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool LeftKnee { get { int o = __p.__offset(22); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool RightKnee { get { int o = __p.__offset(24); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool LeftElbow { get { int o = __p.__offset(26); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool RightElbow { get { int o = __p.__offset(28); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool LeftHand { get { int o = __p.__offset(30); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool RightHand { get { int o = __p.__offset(32); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<solarxr_protocol.rpc.SteamVRTrackersSetting> CreateSteamVRTrackersSetting(FlatBufferBuilder builder,
      bool waist = false,
      bool chest = false,
      bool automaticTrackerToggle = false,
      bool left_foot = false,
      bool right_foot = false,
      bool left_knee = false,
      bool right_knee = false,
      bool left_elbow = false,
      bool right_elbow = false,
      bool left_hand = false,
      bool right_hand = false) {
    builder.StartTable(15);
    SteamVRTrackersSetting.AddRightHand(builder, right_hand);
    SteamVRTrackersSetting.AddLeftHand(builder, left_hand);
    SteamVRTrackersSetting.AddRightElbow(builder, right_elbow);
    SteamVRTrackersSetting.AddLeftElbow(builder, left_elbow);
    SteamVRTrackersSetting.AddRightKnee(builder, right_knee);
    SteamVRTrackersSetting.AddLeftKnee(builder, left_knee);
    SteamVRTrackersSetting.AddRightFoot(builder, right_foot);
    SteamVRTrackersSetting.AddLeftFoot(builder, left_foot);
    SteamVRTrackersSetting.AddAutomaticTrackerToggle(builder, automaticTrackerToggle);
    SteamVRTrackersSetting.AddChest(builder, chest);
    SteamVRTrackersSetting.AddWaist(builder, waist);
    return SteamVRTrackersSetting.EndSteamVRTrackersSetting(builder);
  }

  public static void StartSteamVRTrackersSetting(FlatBufferBuilder builder) { builder.StartTable(15); }
  public static void AddWaist(FlatBufferBuilder builder, bool waist) { builder.AddBool(0, waist, false); }
  public static void AddChest(FlatBufferBuilder builder, bool chest) { builder.AddBool(1, chest, false); }
  public static void AddAutomaticTrackerToggle(FlatBufferBuilder builder, bool automaticTrackerToggle) { builder.AddBool(6, automaticTrackerToggle, false); }
  public static void AddLeftFoot(FlatBufferBuilder builder, bool leftFoot) { builder.AddBool(7, leftFoot, false); }
  public static void AddRightFoot(FlatBufferBuilder builder, bool rightFoot) { builder.AddBool(8, rightFoot, false); }
  public static void AddLeftKnee(FlatBufferBuilder builder, bool leftKnee) { builder.AddBool(9, leftKnee, false); }
  public static void AddRightKnee(FlatBufferBuilder builder, bool rightKnee) { builder.AddBool(10, rightKnee, false); }
  public static void AddLeftElbow(FlatBufferBuilder builder, bool leftElbow) { builder.AddBool(11, leftElbow, false); }
  public static void AddRightElbow(FlatBufferBuilder builder, bool rightElbow) { builder.AddBool(12, rightElbow, false); }
  public static void AddLeftHand(FlatBufferBuilder builder, bool leftHand) { builder.AddBool(13, leftHand, false); }
  public static void AddRightHand(FlatBufferBuilder builder, bool rightHand) { builder.AddBool(14, rightHand, false); }
  public static Offset<solarxr_protocol.rpc.SteamVRTrackersSetting> EndSteamVRTrackersSetting(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.rpc.SteamVRTrackersSetting>(o);
  }
}


}
