// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.rpc
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct NewSerialDeviceResponse : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static NewSerialDeviceResponse GetRootAsNewSerialDeviceResponse(ByteBuffer _bb) { return GetRootAsNewSerialDeviceResponse(_bb, new NewSerialDeviceResponse()); }
  public static NewSerialDeviceResponse GetRootAsNewSerialDeviceResponse(ByteBuffer _bb, NewSerialDeviceResponse obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public NewSerialDeviceResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public solarxr_protocol.rpc.SerialDevice? Device { get { int o = __p.__offset(4); return o != 0 ? (solarxr_protocol.rpc.SerialDevice?)(new solarxr_protocol.rpc.SerialDevice()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<solarxr_protocol.rpc.NewSerialDeviceResponse> CreateNewSerialDeviceResponse(FlatBufferBuilder builder,
      Offset<solarxr_protocol.rpc.SerialDevice> deviceOffset = default(Offset<solarxr_protocol.rpc.SerialDevice>)) {
    builder.StartTable(1);
    NewSerialDeviceResponse.AddDevice(builder, deviceOffset);
    return NewSerialDeviceResponse.EndNewSerialDeviceResponse(builder);
  }

  public static void StartNewSerialDeviceResponse(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddDevice(FlatBufferBuilder builder, Offset<solarxr_protocol.rpc.SerialDevice> deviceOffset) { builder.AddOffset(0, deviceOffset.Value, 0); }
  public static Offset<solarxr_protocol.rpc.NewSerialDeviceResponse> EndNewSerialDeviceResponse(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.rpc.NewSerialDeviceResponse>(o);
  }
}


}
