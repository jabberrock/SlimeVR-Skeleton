// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.rpc
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct StartWifiProvisioningRequest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static StartWifiProvisioningRequest GetRootAsStartWifiProvisioningRequest(ByteBuffer _bb) { return GetRootAsStartWifiProvisioningRequest(_bb, new StartWifiProvisioningRequest()); }
  public static StartWifiProvisioningRequest GetRootAsStartWifiProvisioningRequest(ByteBuffer _bb, StartWifiProvisioningRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public StartWifiProvisioningRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Ssid { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSsidBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetSsidBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetSsidArray() { return __p.__vector_as_array<byte>(4); }
  public string Password { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPasswordBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetPasswordBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetPasswordArray() { return __p.__vector_as_array<byte>(6); }
  public string Port { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPortBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetPortBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetPortArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<solarxr_protocol.rpc.StartWifiProvisioningRequest> CreateStartWifiProvisioningRequest(FlatBufferBuilder builder,
      StringOffset ssidOffset = default(StringOffset),
      StringOffset passwordOffset = default(StringOffset),
      StringOffset portOffset = default(StringOffset)) {
    builder.StartTable(3);
    StartWifiProvisioningRequest.AddPort(builder, portOffset);
    StartWifiProvisioningRequest.AddPassword(builder, passwordOffset);
    StartWifiProvisioningRequest.AddSsid(builder, ssidOffset);
    return StartWifiProvisioningRequest.EndStartWifiProvisioningRequest(builder);
  }

  public static void StartStartWifiProvisioningRequest(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddSsid(FlatBufferBuilder builder, StringOffset ssidOffset) { builder.AddOffset(0, ssidOffset.Value, 0); }
  public static void AddPassword(FlatBufferBuilder builder, StringOffset passwordOffset) { builder.AddOffset(1, passwordOffset.Value, 0); }
  public static void AddPort(FlatBufferBuilder builder, StringOffset portOffset) { builder.AddOffset(2, portOffset.Value, 0); }
  public static Offset<solarxr_protocol.rpc.StartWifiProvisioningRequest> EndStartWifiProvisioningRequest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.rpc.StartWifiProvisioningRequest>(o);
  }
}


}
