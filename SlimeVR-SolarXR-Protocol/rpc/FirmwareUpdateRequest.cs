// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.rpc
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FirmwareUpdateRequest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static FirmwareUpdateRequest GetRootAsFirmwareUpdateRequest(ByteBuffer _bb) { return GetRootAsFirmwareUpdateRequest(_bb, new FirmwareUpdateRequest()); }
  public static FirmwareUpdateRequest GetRootAsFirmwareUpdateRequest(ByteBuffer _bb, FirmwareUpdateRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FirmwareUpdateRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public solarxr_protocol.rpc.FirmwareUpdateMethod MethodType { get { int o = __p.__offset(4); return o != 0 ? (solarxr_protocol.rpc.FirmwareUpdateMethod)__p.bb.Get(o + __p.bb_pos) : solarxr_protocol.rpc.FirmwareUpdateMethod.NONE; } }
  public TTable? Method<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public solarxr_protocol.rpc.OTAFirmwareUpdate MethodAsOTAFirmwareUpdate() { return Method<solarxr_protocol.rpc.OTAFirmwareUpdate>().Value; }
  public solarxr_protocol.rpc.SerialFirmwareUpdate MethodAsSerialFirmwareUpdate() { return Method<solarxr_protocol.rpc.SerialFirmwareUpdate>().Value; }

  public static Offset<solarxr_protocol.rpc.FirmwareUpdateRequest> CreateFirmwareUpdateRequest(FlatBufferBuilder builder,
      solarxr_protocol.rpc.FirmwareUpdateMethod method_type = solarxr_protocol.rpc.FirmwareUpdateMethod.NONE,
      int methodOffset = 0) {
    builder.StartTable(2);
    FirmwareUpdateRequest.AddMethod(builder, methodOffset);
    FirmwareUpdateRequest.AddMethodType(builder, method_type);
    return FirmwareUpdateRequest.EndFirmwareUpdateRequest(builder);
  }

  public static void StartFirmwareUpdateRequest(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddMethodType(FlatBufferBuilder builder, solarxr_protocol.rpc.FirmwareUpdateMethod methodType) { builder.AddByte(0, (byte)methodType, 0); }
  public static void AddMethod(FlatBufferBuilder builder, int methodOffset) { builder.AddOffset(1, methodOffset, 0); }
  public static Offset<solarxr_protocol.rpc.FirmwareUpdateRequest> EndFirmwareUpdateRequest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.rpc.FirmwareUpdateRequest>(o);
  }
}


}
