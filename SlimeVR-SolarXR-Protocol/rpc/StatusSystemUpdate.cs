// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.rpc
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// When a new status appears, it's sent alone
public struct StatusSystemUpdate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static StatusSystemUpdate GetRootAsStatusSystemUpdate(ByteBuffer _bb) { return GetRootAsStatusSystemUpdate(_bb, new StatusSystemUpdate()); }
  public static StatusSystemUpdate GetRootAsStatusSystemUpdate(ByteBuffer _bb, StatusSystemUpdate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public StatusSystemUpdate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public solarxr_protocol.rpc.StatusMessage? NewStatus { get { int o = __p.__offset(4); return o != 0 ? (solarxr_protocol.rpc.StatusMessage?)(new solarxr_protocol.rpc.StatusMessage()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<solarxr_protocol.rpc.StatusSystemUpdate> CreateStatusSystemUpdate(FlatBufferBuilder builder,
      Offset<solarxr_protocol.rpc.StatusMessage> new_statusOffset = default(Offset<solarxr_protocol.rpc.StatusMessage>)) {
    builder.StartTable(1);
    StatusSystemUpdate.AddNewStatus(builder, new_statusOffset);
    return StatusSystemUpdate.EndStatusSystemUpdate(builder);
  }

  public static void StartStatusSystemUpdate(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddNewStatus(FlatBufferBuilder builder, Offset<solarxr_protocol.rpc.StatusMessage> newStatusOffset) { builder.AddOffset(0, newStatusOffset.Value, 0); }
  public static Offset<solarxr_protocol.rpc.StatusSystemUpdate> EndStatusSystemUpdate(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.rpc.StatusSystemUpdate>(o);
  }
}


}
