// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.rpc
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// Cancels the current recording, aborting the process and discarding the data
public struct AutoBoneCancelRecordingRequest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static AutoBoneCancelRecordingRequest GetRootAsAutoBoneCancelRecordingRequest(ByteBuffer _bb) { return GetRootAsAutoBoneCancelRecordingRequest(_bb, new AutoBoneCancelRecordingRequest()); }
  public static AutoBoneCancelRecordingRequest GetRootAsAutoBoneCancelRecordingRequest(ByteBuffer _bb, AutoBoneCancelRecordingRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AutoBoneCancelRecordingRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartAutoBoneCancelRecordingRequest(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<solarxr_protocol.rpc.AutoBoneCancelRecordingRequest> EndAutoBoneCancelRecordingRequest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.rpc.AutoBoneCancelRecordingRequest>(o);
  }
}


}
