// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.rpc
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SerialUpdateResponse : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static SerialUpdateResponse GetRootAsSerialUpdateResponse(ByteBuffer _bb) { return GetRootAsSerialUpdateResponse(_bb, new SerialUpdateResponse()); }
  public static SerialUpdateResponse GetRootAsSerialUpdateResponse(ByteBuffer _bb, SerialUpdateResponse obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SerialUpdateResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Log { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLogBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetLogBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetLogArray() { return __p.__vector_as_array<byte>(4); }
  public bool Closed { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<solarxr_protocol.rpc.SerialUpdateResponse> CreateSerialUpdateResponse(FlatBufferBuilder builder,
      StringOffset logOffset = default(StringOffset),
      bool closed = false) {
    builder.StartTable(2);
    SerialUpdateResponse.AddLog(builder, logOffset);
    SerialUpdateResponse.AddClosed(builder, closed);
    return SerialUpdateResponse.EndSerialUpdateResponse(builder);
  }

  public static void StartSerialUpdateResponse(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddLog(FlatBufferBuilder builder, StringOffset logOffset) { builder.AddOffset(0, logOffset.Value, 0); }
  public static void AddClosed(FlatBufferBuilder builder, bool closed) { builder.AddBool(1, closed, false); }
  public static Offset<solarxr_protocol.rpc.SerialUpdateResponse> EndSerialUpdateResponse(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.rpc.SerialUpdateResponse>(o);
  }
}


}
