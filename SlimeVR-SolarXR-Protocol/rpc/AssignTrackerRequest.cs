// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.rpc
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct AssignTrackerRequest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static AssignTrackerRequest GetRootAsAssignTrackerRequest(ByteBuffer _bb) { return GetRootAsAssignTrackerRequest(_bb, new AssignTrackerRequest()); }
  public static AssignTrackerRequest GetRootAsAssignTrackerRequest(ByteBuffer _bb, AssignTrackerRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AssignTrackerRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public solarxr_protocol.datatypes.TrackerId? TrackerId { get { int o = __p.__offset(4); return o != 0 ? (solarxr_protocol.datatypes.TrackerId?)(new solarxr_protocol.datatypes.TrackerId()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public solarxr_protocol.datatypes.BodyPart BodyPosition { get { int o = __p.__offset(6); return o != 0 ? (solarxr_protocol.datatypes.BodyPart)__p.bb.Get(o + __p.bb_pos) : solarxr_protocol.datatypes.BodyPart.NONE; } }
  public solarxr_protocol.datatypes.math.Quat? MountingOrientation { get { int o = __p.__offset(8); return o != 0 ? (solarxr_protocol.datatypes.math.Quat?)(new solarxr_protocol.datatypes.math.Quat()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public string DisplayName { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDisplayNameBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetDisplayNameBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetDisplayNameArray() { return __p.__vector_as_array<byte>(10); }
  public bool AllowDriftCompensation { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static void StartAssignTrackerRequest(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddTrackerId(FlatBufferBuilder builder, Offset<solarxr_protocol.datatypes.TrackerId> trackerIdOffset) { builder.AddOffset(0, trackerIdOffset.Value, 0); }
  public static void AddBodyPosition(FlatBufferBuilder builder, solarxr_protocol.datatypes.BodyPart bodyPosition) { builder.AddByte(1, (byte)bodyPosition, 0); }
  public static void AddMountingOrientation(FlatBufferBuilder builder, Offset<solarxr_protocol.datatypes.math.Quat> mountingOrientationOffset) { builder.AddStruct(2, mountingOrientationOffset.Value, 0); }
  public static void AddDisplayName(FlatBufferBuilder builder, StringOffset displayNameOffset) { builder.AddOffset(3, displayNameOffset.Value, 0); }
  public static void AddAllowDriftCompensation(FlatBufferBuilder builder, bool allowDriftCompensation) { builder.AddBool(4, allowDriftCompensation, false); }
  public static Offset<solarxr_protocol.rpc.AssignTrackerRequest> EndAssignTrackerRequest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.rpc.AssignTrackerRequest>(o);
  }
}


}
