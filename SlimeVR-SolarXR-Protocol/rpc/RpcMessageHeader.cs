// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.rpc
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RpcMessageHeader : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static RpcMessageHeader GetRootAsRpcMessageHeader(ByteBuffer _bb) { return GetRootAsRpcMessageHeader(_bb, new RpcMessageHeader()); }
  public static RpcMessageHeader GetRootAsRpcMessageHeader(ByteBuffer _bb, RpcMessageHeader obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RpcMessageHeader __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// For a request, this identifies the request. For a response, this corresponds
  /// to the request that it is responding to.
  public solarxr_protocol.datatypes.TransactionId? TxId { get { int o = __p.__offset(4); return o != 0 ? (solarxr_protocol.datatypes.TransactionId?)(new solarxr_protocol.datatypes.TransactionId()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public solarxr_protocol.rpc.RpcMessage MessageType { get { int o = __p.__offset(6); return o != 0 ? (solarxr_protocol.rpc.RpcMessage)__p.bb.Get(o + __p.bb_pos) : solarxr_protocol.rpc.RpcMessage.NONE; } }
  public TTable? Message<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public solarxr_protocol.rpc.HeartbeatRequest MessageAsHeartbeatRequest() { return Message<solarxr_protocol.rpc.HeartbeatRequest>().Value; }
  public solarxr_protocol.rpc.HeartbeatResponse MessageAsHeartbeatResponse() { return Message<solarxr_protocol.rpc.HeartbeatResponse>().Value; }
  public solarxr_protocol.rpc.ResetRequest MessageAsResetRequest() { return Message<solarxr_protocol.rpc.ResetRequest>().Value; }
  public solarxr_protocol.rpc.ResetResponse MessageAsResetResponse() { return Message<solarxr_protocol.rpc.ResetResponse>().Value; }
  public solarxr_protocol.rpc.AssignTrackerRequest MessageAsAssignTrackerRequest() { return Message<solarxr_protocol.rpc.AssignTrackerRequest>().Value; }
  public solarxr_protocol.rpc.SettingsRequest MessageAsSettingsRequest() { return Message<solarxr_protocol.rpc.SettingsRequest>().Value; }
  public solarxr_protocol.rpc.SettingsResponse MessageAsSettingsResponse() { return Message<solarxr_protocol.rpc.SettingsResponse>().Value; }
  public solarxr_protocol.rpc.ChangeSettingsRequest MessageAsChangeSettingsRequest() { return Message<solarxr_protocol.rpc.ChangeSettingsRequest>().Value; }
  public solarxr_protocol.rpc.ClearDriftCompensationRequest MessageAsClearDriftCompensationRequest() { return Message<solarxr_protocol.rpc.ClearDriftCompensationRequest>().Value; }
  public solarxr_protocol.rpc.RecordBVHRequest MessageAsRecordBVHRequest() { return Message<solarxr_protocol.rpc.RecordBVHRequest>().Value; }
  public solarxr_protocol.rpc.RecordBVHStatus MessageAsRecordBVHStatus() { return Message<solarxr_protocol.rpc.RecordBVHStatus>().Value; }
  public solarxr_protocol.rpc.SkeletonConfigRequest MessageAsSkeletonConfigRequest() { return Message<solarxr_protocol.rpc.SkeletonConfigRequest>().Value; }
  public solarxr_protocol.rpc.ChangeSkeletonConfigRequest MessageAsChangeSkeletonConfigRequest() { return Message<solarxr_protocol.rpc.ChangeSkeletonConfigRequest>().Value; }
  public solarxr_protocol.rpc.SkeletonResetAllRequest MessageAsSkeletonResetAllRequest() { return Message<solarxr_protocol.rpc.SkeletonResetAllRequest>().Value; }
  public solarxr_protocol.rpc.SkeletonConfigResponse MessageAsSkeletonConfigResponse() { return Message<solarxr_protocol.rpc.SkeletonConfigResponse>().Value; }
  public solarxr_protocol.rpc.OpenSerialRequest MessageAsOpenSerialRequest() { return Message<solarxr_protocol.rpc.OpenSerialRequest>().Value; }
  public solarxr_protocol.rpc.CloseSerialRequest MessageAsCloseSerialRequest() { return Message<solarxr_protocol.rpc.CloseSerialRequest>().Value; }
  public solarxr_protocol.rpc.SetWifiRequest MessageAsSetWifiRequest() { return Message<solarxr_protocol.rpc.SetWifiRequest>().Value; }
  public solarxr_protocol.rpc.SerialUpdateResponse MessageAsSerialUpdateResponse() { return Message<solarxr_protocol.rpc.SerialUpdateResponse>().Value; }
  public solarxr_protocol.rpc.AutoBoneProcessRequest MessageAsAutoBoneProcessRequest() { return Message<solarxr_protocol.rpc.AutoBoneProcessRequest>().Value; }
  public solarxr_protocol.rpc.AutoBoneProcessStatusResponse MessageAsAutoBoneProcessStatusResponse() { return Message<solarxr_protocol.rpc.AutoBoneProcessStatusResponse>().Value; }
  public solarxr_protocol.rpc.AutoBoneEpochResponse MessageAsAutoBoneEpochResponse() { return Message<solarxr_protocol.rpc.AutoBoneEpochResponse>().Value; }
  public solarxr_protocol.rpc.OverlayDisplayModeRequest MessageAsOverlayDisplayModeRequest() { return Message<solarxr_protocol.rpc.OverlayDisplayModeRequest>().Value; }
  public solarxr_protocol.rpc.OverlayDisplayModeChangeRequest MessageAsOverlayDisplayModeChangeRequest() { return Message<solarxr_protocol.rpc.OverlayDisplayModeChangeRequest>().Value; }
  public solarxr_protocol.rpc.OverlayDisplayModeResponse MessageAsOverlayDisplayModeResponse() { return Message<solarxr_protocol.rpc.OverlayDisplayModeResponse>().Value; }
  public solarxr_protocol.rpc.SerialTrackerRebootRequest MessageAsSerialTrackerRebootRequest() { return Message<solarxr_protocol.rpc.SerialTrackerRebootRequest>().Value; }
  public solarxr_protocol.rpc.SerialTrackerGetInfoRequest MessageAsSerialTrackerGetInfoRequest() { return Message<solarxr_protocol.rpc.SerialTrackerGetInfoRequest>().Value; }
  public solarxr_protocol.rpc.SerialTrackerFactoryResetRequest MessageAsSerialTrackerFactoryResetRequest() { return Message<solarxr_protocol.rpc.SerialTrackerFactoryResetRequest>().Value; }
  public solarxr_protocol.rpc.SerialDevicesRequest MessageAsSerialDevicesRequest() { return Message<solarxr_protocol.rpc.SerialDevicesRequest>().Value; }
  public solarxr_protocol.rpc.SerialDevicesResponse MessageAsSerialDevicesResponse() { return Message<solarxr_protocol.rpc.SerialDevicesResponse>().Value; }
  public solarxr_protocol.rpc.NewSerialDeviceResponse MessageAsNewSerialDeviceResponse() { return Message<solarxr_protocol.rpc.NewSerialDeviceResponse>().Value; }
  public solarxr_protocol.rpc.StartWifiProvisioningRequest MessageAsStartWifiProvisioningRequest() { return Message<solarxr_protocol.rpc.StartWifiProvisioningRequest>().Value; }
  public solarxr_protocol.rpc.StopWifiProvisioningRequest MessageAsStopWifiProvisioningRequest() { return Message<solarxr_protocol.rpc.StopWifiProvisioningRequest>().Value; }
  public solarxr_protocol.rpc.WifiProvisioningStatusResponse MessageAsWifiProvisioningStatusResponse() { return Message<solarxr_protocol.rpc.WifiProvisioningStatusResponse>().Value; }
  public solarxr_protocol.rpc.ServerInfosRequest MessageAsServerInfosRequest() { return Message<solarxr_protocol.rpc.ServerInfosRequest>().Value; }
  public solarxr_protocol.rpc.ServerInfosResponse MessageAsServerInfosResponse() { return Message<solarxr_protocol.rpc.ServerInfosResponse>().Value; }
  public solarxr_protocol.rpc.LegTweaksTmpChange MessageAsLegTweaksTmpChange() { return Message<solarxr_protocol.rpc.LegTweaksTmpChange>().Value; }
  public solarxr_protocol.rpc.LegTweaksTmpClear MessageAsLegTweaksTmpClear() { return Message<solarxr_protocol.rpc.LegTweaksTmpClear>().Value; }
  public solarxr_protocol.rpc.TapDetectionSetupNotification MessageAsTapDetectionSetupNotification() { return Message<solarxr_protocol.rpc.TapDetectionSetupNotification>().Value; }
  public solarxr_protocol.rpc.SetPauseTrackingRequest MessageAsSetPauseTrackingRequest() { return Message<solarxr_protocol.rpc.SetPauseTrackingRequest>().Value; }
  public solarxr_protocol.rpc.StatusSystemRequest MessageAsStatusSystemRequest() { return Message<solarxr_protocol.rpc.StatusSystemRequest>().Value; }
  public solarxr_protocol.rpc.StatusSystemResponse MessageAsStatusSystemResponse() { return Message<solarxr_protocol.rpc.StatusSystemResponse>().Value; }
  public solarxr_protocol.rpc.StatusSystemUpdate MessageAsStatusSystemUpdate() { return Message<solarxr_protocol.rpc.StatusSystemUpdate>().Value; }
  public solarxr_protocol.rpc.StatusSystemFixed MessageAsStatusSystemFixed() { return Message<solarxr_protocol.rpc.StatusSystemFixed>().Value; }
  public solarxr_protocol.rpc.ClearMountingResetRequest MessageAsClearMountingResetRequest() { return Message<solarxr_protocol.rpc.ClearMountingResetRequest>().Value; }
  public solarxr_protocol.rpc.HeightRequest MessageAsHeightRequest() { return Message<solarxr_protocol.rpc.HeightRequest>().Value; }
  public solarxr_protocol.rpc.HeightResponse MessageAsHeightResponse() { return Message<solarxr_protocol.rpc.HeightResponse>().Value; }
  public solarxr_protocol.rpc.AutoBoneApplyRequest MessageAsAutoBoneApplyRequest() { return Message<solarxr_protocol.rpc.AutoBoneApplyRequest>().Value; }
  public solarxr_protocol.rpc.AutoBoneStopRecordingRequest MessageAsAutoBoneStopRecordingRequest() { return Message<solarxr_protocol.rpc.AutoBoneStopRecordingRequest>().Value; }
  public solarxr_protocol.rpc.AutoBoneCancelRecordingRequest MessageAsAutoBoneCancelRecordingRequest() { return Message<solarxr_protocol.rpc.AutoBoneCancelRecordingRequest>().Value; }
  public solarxr_protocol.rpc.SaveFileNotification MessageAsSaveFileNotification() { return Message<solarxr_protocol.rpc.SaveFileNotification>().Value; }
  public solarxr_protocol.rpc.TrackingPauseStateRequest MessageAsTrackingPauseStateRequest() { return Message<solarxr_protocol.rpc.TrackingPauseStateRequest>().Value; }
  public solarxr_protocol.rpc.TrackingPauseStateResponse MessageAsTrackingPauseStateResponse() { return Message<solarxr_protocol.rpc.TrackingPauseStateResponse>().Value; }
  public solarxr_protocol.rpc.SerialTrackerGetWifiScanRequest MessageAsSerialTrackerGetWifiScanRequest() { return Message<solarxr_protocol.rpc.SerialTrackerGetWifiScanRequest>().Value; }
  public solarxr_protocol.rpc.UnknownDeviceHandshakeNotification MessageAsUnknownDeviceHandshakeNotification() { return Message<solarxr_protocol.rpc.UnknownDeviceHandshakeNotification>().Value; }
  public solarxr_protocol.rpc.AddUnknownDeviceRequest MessageAsAddUnknownDeviceRequest() { return Message<solarxr_protocol.rpc.AddUnknownDeviceRequest>().Value; }
  public solarxr_protocol.rpc.ForgetDeviceRequest MessageAsForgetDeviceRequest() { return Message<solarxr_protocol.rpc.ForgetDeviceRequest>().Value; }
  public solarxr_protocol.rpc.FirmwareUpdateRequest MessageAsFirmwareUpdateRequest() { return Message<solarxr_protocol.rpc.FirmwareUpdateRequest>().Value; }
  public solarxr_protocol.rpc.FirmwareUpdateStatusResponse MessageAsFirmwareUpdateStatusResponse() { return Message<solarxr_protocol.rpc.FirmwareUpdateStatusResponse>().Value; }
  public solarxr_protocol.rpc.FirmwareUpdateStopQueuesRequest MessageAsFirmwareUpdateStopQueuesRequest() { return Message<solarxr_protocol.rpc.FirmwareUpdateStopQueuesRequest>().Value; }
  public solarxr_protocol.rpc.SettingsResetRequest MessageAsSettingsResetRequest() { return Message<solarxr_protocol.rpc.SettingsResetRequest>().Value; }
  public solarxr_protocol.rpc.MagToggleRequest MessageAsMagToggleRequest() { return Message<solarxr_protocol.rpc.MagToggleRequest>().Value; }
  public solarxr_protocol.rpc.MagToggleResponse MessageAsMagToggleResponse() { return Message<solarxr_protocol.rpc.MagToggleResponse>().Value; }
  public solarxr_protocol.rpc.ChangeMagToggleRequest MessageAsChangeMagToggleRequest() { return Message<solarxr_protocol.rpc.ChangeMagToggleRequest>().Value; }

  public static void StartRpcMessageHeader(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddTxId(FlatBufferBuilder builder, Offset<solarxr_protocol.datatypes.TransactionId> txIdOffset) { builder.AddStruct(0, txIdOffset.Value, 0); }
  public static void AddMessageType(FlatBufferBuilder builder, solarxr_protocol.rpc.RpcMessage messageType) { builder.AddByte(1, (byte)messageType, 0); }
  public static void AddMessage(FlatBufferBuilder builder, int messageOffset) { builder.AddOffset(2, messageOffset, 0); }
  public static Offset<solarxr_protocol.rpc.RpcMessageHeader> EndRpcMessageHeader(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.rpc.RpcMessageHeader>(o);
  }
}


}
