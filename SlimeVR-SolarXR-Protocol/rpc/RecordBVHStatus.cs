// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.rpc
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RecordBVHStatus : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static RecordBVHStatus GetRootAsRecordBVHStatus(ByteBuffer _bb) { return GetRootAsRecordBVHStatus(_bb, new RecordBVHStatus()); }
  public static RecordBVHStatus GetRootAsRecordBVHStatus(ByteBuffer _bb, RecordBVHStatus obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RecordBVHStatus __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool Recording { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<solarxr_protocol.rpc.RecordBVHStatus> CreateRecordBVHStatus(FlatBufferBuilder builder,
      bool recording = false) {
    builder.StartTable(1);
    RecordBVHStatus.AddRecording(builder, recording);
    return RecordBVHStatus.EndRecordBVHStatus(builder);
  }

  public static void StartRecordBVHStatus(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddRecording(FlatBufferBuilder builder, bool recording) { builder.AddBool(0, recording, false); }
  public static Offset<solarxr_protocol.rpc.RecordBVHStatus> EndRecordBVHStatus(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.rpc.RecordBVHStatus>(o);
  }
}


}
