// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.rpc
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct AutoBoneProcessStatusResponse : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static AutoBoneProcessStatusResponse GetRootAsAutoBoneProcessStatusResponse(ByteBuffer _bb) { return GetRootAsAutoBoneProcessStatusResponse(_bb, new AutoBoneProcessStatusResponse()); }
  public static AutoBoneProcessStatusResponse GetRootAsAutoBoneProcessStatusResponse(ByteBuffer _bb, AutoBoneProcessStatusResponse obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AutoBoneProcessStatusResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public solarxr_protocol.rpc.AutoBoneProcessType ProcessType { get { int o = __p.__offset(4); return o != 0 ? (solarxr_protocol.rpc.AutoBoneProcessType)__p.bb.Get(o + __p.bb_pos) : solarxr_protocol.rpc.AutoBoneProcessType.NONE; } }
  /// The current count. This value is -1 if there is nothing to report.
  public uint Current { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  /// The total count. This value is -1 if there is nothing to report.
  public uint Total { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  /// True if the operation has completed with any result, successful or not.
  public bool Completed { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// True if the completed operation was successful, only observe if `completed` is true.
  public bool Success { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// The time remaining in seconds. This value is -1 if there is nothing to report.
  public float Eta { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<solarxr_protocol.rpc.AutoBoneProcessStatusResponse> CreateAutoBoneProcessStatusResponse(FlatBufferBuilder builder,
      solarxr_protocol.rpc.AutoBoneProcessType process_type = solarxr_protocol.rpc.AutoBoneProcessType.NONE,
      uint current = 0,
      uint total = 0,
      bool completed = false,
      bool success = false,
      float eta = 0.0f) {
    builder.StartTable(7);
    AutoBoneProcessStatusResponse.AddEta(builder, eta);
    AutoBoneProcessStatusResponse.AddTotal(builder, total);
    AutoBoneProcessStatusResponse.AddCurrent(builder, current);
    AutoBoneProcessStatusResponse.AddSuccess(builder, success);
    AutoBoneProcessStatusResponse.AddCompleted(builder, completed);
    AutoBoneProcessStatusResponse.AddProcessType(builder, process_type);
    return AutoBoneProcessStatusResponse.EndAutoBoneProcessStatusResponse(builder);
  }

  public static void StartAutoBoneProcessStatusResponse(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddProcessType(FlatBufferBuilder builder, solarxr_protocol.rpc.AutoBoneProcessType processType) { builder.AddByte(0, (byte)processType, 0); }
  public static void AddCurrent(FlatBufferBuilder builder, uint current) { builder.AddUint(2, current, 0); }
  public static void AddTotal(FlatBufferBuilder builder, uint total) { builder.AddUint(3, total, 0); }
  public static void AddCompleted(FlatBufferBuilder builder, bool completed) { builder.AddBool(4, completed, false); }
  public static void AddSuccess(FlatBufferBuilder builder, bool success) { builder.AddBool(5, success, false); }
  public static void AddEta(FlatBufferBuilder builder, float eta) { builder.AddFloat(6, eta, 0.0f); }
  public static Offset<solarxr_protocol.rpc.AutoBoneProcessStatusResponse> EndAutoBoneProcessStatusResponse(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.rpc.AutoBoneProcessStatusResponse>(o);
  }
}


}
