// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.rpc
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// When an status is fixed and it's removed, it's ID is sent
public struct StatusSystemFixed : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static StatusSystemFixed GetRootAsStatusSystemFixed(ByteBuffer _bb) { return GetRootAsStatusSystemFixed(_bb, new StatusSystemFixed()); }
  public static StatusSystemFixed GetRootAsStatusSystemFixed(ByteBuffer _bb, StatusSystemFixed obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public StatusSystemFixed __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint FixedStatusId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<solarxr_protocol.rpc.StatusSystemFixed> CreateStatusSystemFixed(FlatBufferBuilder builder,
      uint fixed_status_id = 0) {
    builder.StartTable(1);
    StatusSystemFixed.AddFixedStatusId(builder, fixed_status_id);
    return StatusSystemFixed.EndStatusSystemFixed(builder);
  }

  public static void StartStatusSystemFixed(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddFixedStatusId(FlatBufferBuilder builder, uint fixedStatusId) { builder.AddUint(0, fixedStatusId, 0); }
  public static Offset<solarxr_protocol.rpc.StatusSystemFixed> EndStatusSystemFixed(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.rpc.StatusSystemFixed>(o);
  }
}


}
