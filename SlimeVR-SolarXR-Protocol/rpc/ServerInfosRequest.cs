// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.rpc
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// Allows to ask generic infos about the server,
/// like the local ip address, the version of the server, the java version,
/// the current working dir and other information we might want to show in the gui
/// for information/debug purposes
public struct ServerInfosRequest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static ServerInfosRequest GetRootAsServerInfosRequest(ByteBuffer _bb) { return GetRootAsServerInfosRequest(_bb, new ServerInfosRequest()); }
  public static ServerInfosRequest GetRootAsServerInfosRequest(ByteBuffer _bb, ServerInfosRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ServerInfosRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartServerInfosRequest(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<solarxr_protocol.rpc.ServerInfosRequest> EndServerInfosRequest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.rpc.ServerInfosRequest>(o);
  }
}


}
