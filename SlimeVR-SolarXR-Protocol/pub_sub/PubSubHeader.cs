// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace solarxr_protocol.pub_sub
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PubSubHeader : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static PubSubHeader GetRootAsPubSubHeader(ByteBuffer _bb) { return GetRootAsPubSubHeader(_bb, new PubSubHeader()); }
  public static PubSubHeader GetRootAsPubSubHeader(ByteBuffer _bb, PubSubHeader obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PubSubHeader __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public solarxr_protocol.pub_sub.PubSubUnion UType { get { int o = __p.__offset(4); return o != 0 ? (solarxr_protocol.pub_sub.PubSubUnion)__p.bb.Get(o + __p.bb_pos) : solarxr_protocol.pub_sub.PubSubUnion.NONE; } }
  public TTable? U<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public solarxr_protocol.pub_sub.Message UAsMessage() { return U<solarxr_protocol.pub_sub.Message>().Value; }
  public solarxr_protocol.pub_sub.SubscriptionRequest UAsSubscriptionRequest() { return U<solarxr_protocol.pub_sub.SubscriptionRequest>().Value; }
  public solarxr_protocol.pub_sub.TopicHandleRequest UAsTopicHandleRequest() { return U<solarxr_protocol.pub_sub.TopicHandleRequest>().Value; }
  public solarxr_protocol.pub_sub.TopicMapping UAsTopicMapping() { return U<solarxr_protocol.pub_sub.TopicMapping>().Value; }

  public static Offset<solarxr_protocol.pub_sub.PubSubHeader> CreatePubSubHeader(FlatBufferBuilder builder,
      solarxr_protocol.pub_sub.PubSubUnion u_type = solarxr_protocol.pub_sub.PubSubUnion.NONE,
      int uOffset = 0) {
    builder.StartTable(2);
    PubSubHeader.AddU(builder, uOffset);
    PubSubHeader.AddUType(builder, u_type);
    return PubSubHeader.EndPubSubHeader(builder);
  }

  public static void StartPubSubHeader(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddUType(FlatBufferBuilder builder, solarxr_protocol.pub_sub.PubSubUnion uType) { builder.AddByte(0, (byte)uType, 0); }
  public static void AddU(FlatBufferBuilder builder, int uOffset) { builder.AddOffset(1, uOffset, 0); }
  public static Offset<solarxr_protocol.pub_sub.PubSubHeader> EndPubSubHeader(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<solarxr_protocol.pub_sub.PubSubHeader>(o);
  }
}


}
